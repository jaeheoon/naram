<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.naram.mapper.UserMapper">

<!-- 로그인 -->
    <select id="findByUsername" parameterType="String" resultType="userLoginVo">
        select * from users WHERE user_id = #{username}
    </select>
<!-- 프론트단에서 사용할 정보 -->
    <select id="userInfo" parameterType="String" resultType="userInfoVo">
        select user_number, admin_check from users where user_id = #{userId}
    </select>

<!-- 로그인 -->
    <select id="login" resultType="userLoginVo">
        select u.user_number as user_number, user_id,user_name,admin_check,user_email,a.nickname from users u
        join user_add a ON u.user_number = a.user_number
        where user_id = #{userId} and user_password = #{userPassword}
    </select>
<!-- 아이디 찾기 -->
    <select id="findId" resultType="String">
        select user_id
        from users
        where user_email = #{userEmail} and user_name = #{userName}
    </select>
<!-- 비밀번호 찾기 -->
    <select id="findPw" resultType="userDto">
        select * from users
        where user_id = #{userId} and user_email = #{userEmail} and user_name = #{userName}
    </select>
<!-- 비밀번호 확인-->
    <select id="checkPw" resultType="String">
        select user_password from users
        where user_number = #{userNumber}
    </select>
<!-- 아이디 중복확인 -->
    <select id="checkId" resultType="int" parameterType="string">
        SELECT COUNT(*) AS count
        FROM users
        WHERE user_id = #{userId}
    </select>
<!-- 이메일 중복확인 -->
    <select id="checkEmail" resultType="int" parameterType="string">
        SELECT COUNT(*) AS count
        FROM users
        WHERE user_email = #{userEmail}
    </select>
<!-- 닉네임 중복확인 -->
    <select id="checkNickname" resultType="int" parameterType="string">
        SELECT COUNT(*) AS count
        FROM user_add
        WHERE nickname = #{nickname}
    </select>
<!-- 비밀번호 변경 -->
    <update id="updatePw" parameterType="CheckPwVo">
        update users
        set user_password = #{newPassword}
        where user_number = #{userNumber}
    </update>
    
<!-- 회원가입 -->
    <insert id="userJoin" parameterType="userDto">
        insert into users (user_id, user_password, user_name, admin_check, user_email,user_birth,user_calendar)
        values (#{userId},#{userPassword},#{userName},#{adminCheck},#{userEmail},#{userBirth},#{userCalendar})
    </insert>
<!-- 회원 추가정보 -->
    <insert id="userAdd" parameterType="userAddDto">
        insert into user_add (user_number, address, address_detail,address_post, phone, gender, nickname)
        values (LAST_INSERT_ID(),#{address},#{addressDetail},#{addressPost},#{phone},#{gender},#{nickname})
    </insert>
<!-- 마이페이지 -->
    <select id="myPage" resultType="myPageVo">
        select u.user_number as user_number,user_id,user_name ,user_email ,user_birth ,user_calendar
             ,address,address_detail,address_post,phone,gender,nickname
        from users u join user_add a on u.user_number = a.user_number
        where u.user_number = #{userNumber}
    </select>
</mapper>